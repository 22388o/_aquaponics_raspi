def display_8x8 (time=str, char="=", charset=None):
    if not charset:
        charset = { '0':   [[0,0,1,1,0,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,0,1,1,0,0]],
                    '1':   [[0,0,0,1,0,0],[0,0,1,1,0,0],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,0,1,1,1,0]],
                    '2':   [[0,0,1,1,0,0],[0,1,0,0,1,0],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,1,1,1,0]],
                    '3':   [[0,0,1,1,0,0],[0,1,0,0,1,0],[0,0,0,1,0,0],[0,0,0,0,1,0],[0,1,0,0,1,0],[0,0,1,1,0,0]],
                    '4':   [[0,0,0,0,1,0],[0,0,0,1,1,0],[0,0,1,0,1,0],[0,1,1,1,1,0],[0,0,0,0,1,0],[0,0,0,0,1,0]],
                    '5':   [[0,1,1,1,1,0],[0,1,0,0,0,0],[0,1,1,1,0,0],[0,0,0,0,1,0],[0,1,0,0,1,0],[0,0,1,1,0,0]],
                    '6':   [[0,0,1,1,0,0],[0,1,0,0,0,0],[0,1,1,1,0,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,0,1,1,0,0]],
                    '7':   [[0,1,1,1,1,0],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,0,1,0,0,0]],
                    '8':   [[0,0,1,1,0,0],[0,1,0,0,1,0],[0,0,1,1,0,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,0,1,1,0,0]],
                    '9':   [[0,0,1,1,0,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,0,1,1,1,0],[0,0,0,0,1,0],[0,0,1,1,0,0]],
                    ':': [[0,0,0,0,0,0,0,0],[0,0,0,1,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,1,1,0,0,0],[0,0,0,0,0,0,0,0]],
                    'p':    [[0,0,0,0,0],[0,1,1,1,0],[0,1,0,0,1],[0,1,1,1,0],[0,1,0,0,0],[0,1,0,0,0]],
                    'u':    [[0,0,0,0,0],[0,1,0,0,1],[0,1,0,0,1],[0,1,0,0,1],[0,0,1,1,1],[0,0,0,0,0]],
                    'm':    [[0,0,0,0,0,0],[0,0,1,0,1,1],[0,1,0,1,0,1],[0,1,0,1,0,1],[0,1,0,1,0,1],[0,0,0,0,0,0]],
                    'i':    [[0,0,1,0],[0,0,0,0],[0,1,1,0],[0,0,1,0],[0,1,1,1],[0,0,0,0]],
                    'n':    [[0,0,0,0,0],[0,1,1,1,0],[0,1,0,0,1],[0,1,0,0,1],[0,1,0,0,1],[0,0,0,0,0]],
                    'g':    [[0,0,0,0,0],[0,0,1,1,1],[0,1,0,0,1],[0,0,1,1,1],[0,0,0,0,1],[0,0,1,1,1]]
                    }
    if 'sc' not in list(charset.keys()):
        charset['sc'] = [[1,1,1,1,1,1],[1,0,0,0,0,1],[1,0,0,0,0,1],[1,0,0,0,0,1],[1,0,0,0,0,1],[1,1,1,1,1,1]]
    
    subst_dict={0: " ", 1:char}
    
    assigned_digits = digit_assign(string=str(time), digits=charset)
    matrix_to_be_displayed = display_list_add(list_in=assigned_digits)
    display_list(subst_dict=subst_dict, list_in=matrix_to_be_displayed)
    

def digit_assign(string:str, digits:dict):
    subst_list = []
    for digit in string:
        if digit in list(digits.keys()):
            subst_list.append(digits[digit])
        else:
            subst_list.append(digits['sc'])
    return subst_list
    
    
def display_list_add (list_in=[[[0,0,1,1,0,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,0,1,1,0,0]],[[0,0,0,1,0,0],[0,0,1,1,0,0],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,0,1,1,1,0]]]):
    converted_list = []
    act_of_row = 0
    tot_of_rows = len(list_in[0])
    while act_of_row < tot_of_rows:
        act_row = []
        for digit in list_in:
            act_row = act_row + digit[act_of_row]
        act_of_row += 1
        converted_list.append(act_row)                           
    return converted_list


def display_list(subst_dict={0: " ", 1:"O"}, list_in=[[0,0,1,1,0,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,0,1,1,0,0]]):
    for line in list_in:
        row = ""
        for digit in line:
            row += str(subst_dict[digit])
        print(row)
                
    
