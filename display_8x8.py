def display_8x8(string=str, char="x", charset=None):
    if not charset:
        charset = {'0': [[0, 0, 1, 1, 0, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 0, 1, 1, 0, 0]],
                   '1': [[0, 0, 0, 1, 0, 0],
                         [0, 0, 1, 1, 0, 0],
                         [0, 0, 0, 1, 0, 0],
                         [0, 0, 0, 1, 0, 0],
                         [0, 0, 0, 1, 0, 0],
                         [0, 0, 1, 1, 1, 0]],
                   '2': [[0, 0, 1, 1, 0, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 0, 0, 0, 1, 0],
                         [0, 0, 0, 1, 0, 0],
                         [0, 0, 1, 0, 0, 0],
                         [0, 1, 1, 1, 1, 0]],
                   '3': [[0, 0, 1, 1, 0, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 0, 0, 1, 0, 0],
                         [0, 0, 0, 0, 1, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 0, 1, 1, 0, 0]],
                   '4': [[0, 0, 0, 0, 1, 0],
                         [0, 0, 0, 1, 1, 0],
                         [0, 0, 1, 0, 1, 0],
                         [0, 1, 1, 1, 1, 0],
                         [0, 0, 0, 0, 1, 0],
                         [0, 0, 0, 0, 1, 0]],
                   '5': [[0, 1, 1, 1, 1, 0],
                         [0, 1, 0, 0, 0, 0],
                         [0, 1, 1, 1, 0, 0],
                         [0, 0, 0, 0, 1, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 0, 1, 1, 0, 0]],
                   '6': [[0, 0, 1, 1, 0, 0],
                         [0, 1, 0, 0, 0, 0],
                         [0, 1, 1, 1, 0, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 0, 1, 1, 0, 0]],
                   '7': [[0, 1, 1, 1, 1, 0],
                         [0, 0, 0, 0, 1, 0],
                         [0, 0, 0, 1, 0, 0],
                         [0, 0, 0, 1, 0, 0],
                         [0, 0, 1, 0, 0, 0],
                         [0, 0, 1, 0, 0, 0]],
                   '8': [[0, 0, 1, 1, 0, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 0, 1, 1, 0, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 0, 1, 1, 0, 0]],
                   '9': [[0, 0, 1, 1, 0, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 1, 0, 0, 1, 0],
                         [0, 0, 1, 1, 1, 0],
                         [0, 0, 0, 0, 1, 0],
                         [0, 0, 1, 1, 0, 0]],
                   ':': [[0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 1, 1, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 1, 1, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0]],
                   'a': [[0, 0, 0, 0, 0],
                         [0, 0, 1, 0, 0],
                         [0, 1, 0, 1, 0],
                         [0, 1, 0, 1, 0],
                         [0, 0, 1, 1, 1],
                         [0, 0, 0, 0, 0]],
                   'b': [[0, 1, 0, 0, 0],
                         [0, 1, 1, 0, 0],
                         [0, 1, 0, 1, 0],
                         [0, 1, 0, 1, 0],
                         [0, 1, 1, 0, 0],
                         [0, 0, 0, 0, 0]],
                   'c': [[0, 0, 0, 0, 0],
                         [0, 0, 1, 1, 0],
                         [0, 1, 0, 0, 0],
                         [0, 1, 0, 0, 0],
                         [0, 0, 1, 1, 0],
                         [0, 0, 0, 0, 0]],
                   'd': [[0, 0, 0, 1, 0],
                         [0, 0, 1, 1, 0],
                         [0, 1, 0, 1, 0],
                         [0, 1, 0, 1, 0],
                         [0, 0, 1, 1, 0],
                         [0, 0, 0, 0, 0]],
                   'e': [[0, 0, 0, 0, 0],
                         [0, 0, 1, 1, 0],
                         [0, 1, 0, 0, 1],
                         [0, 1, 1, 1, 0],
                         [0, 0, 1, 1, 1],
                         [0, 0, 0, 0, 0]],
                   'o': [[0, 0, 0, 0, 0],
                         [0, 0, 1, 1, 0],
                         [0, 1, 0, 0, 1],
                         [0, 1, 0, 0, 1],
                         [0, 0, 1, 1, 0],
                         [0, 0, 0, 0, 0]],
                   'p': [[0, 0, 0, 0, 0],
                         [0, 1, 1, 1, 0],
                         [0, 1, 0, 0, 1],
                         [0, 1, 1, 1, 0],
                         [0, 1, 0, 0, 0],
                         [0, 1, 0, 0, 0]],
                   'r': [[0, 0, 0, 0],
                         [0, 1, 0, 1],
                         [0, 1, 1, 0],
                         [0, 1, 0, 0],
                         [0, 1, 0, 0],
                         [0, 0, 0, 0]],
                   's': [[0, 0, 0, 0, 0],
                         [0, 0, 1, 1, 1],
                         [0, 1, 1, 0, 0],
                         [0, 0, 0, 1, 1],
                         [0, 1, 1, 1, 0],
                         [0, 0, 0, 0, 0]],
                   'g': [[0, 0, 0, 0, 0],
                         [0, 0, 1, 1, 1],
                         [0, 1, 0, 0, 1],
                         [0, 0, 1, 1, 1],
                         [0, 0, 0, 0, 1],
                         [0, 0, 1, 1, 1]],
                   'i': [[0, 0, 1, 0],
                         [0, 0, 0, 0],
                         [0, 1, 1, 0],
                         [0, 0, 1, 0],
                         [0, 1, 1, 1],
                         [0, 0, 0, 0]],
                   'j': [[0, 0, 1, 0],
                         [0, 0, 0, 0],
                         [0, 1, 1, 0],
                         [0, 0, 1, 0],
                         [1, 0, 1, 0],
                         [0, 1, 0, 0]],
                   'k': [[0, 1, 0, 0, 0],
                         [0, 1, 0, 1, 0],
                         [0, 1, 1, 0, 0],
                         [0, 1, 0, 1, 0],
                         [0, 1, 0, 0, 1],
                         [0, 0, 0, 0, 0]],
                   'l': [[0, 1, 0],
                         [0, 1, 0],
                         [0, 1, 0],
                         [0, 1, 0],
                         [0, 1, 1],
                         [0, 0, 0]],
                   'u': [[0, 0, 0, 0, 0],
                         [0, 1, 0, 0, 1],
                         [0, 1, 0, 0, 1],
                         [0, 1, 0, 0, 1],
                         [0, 0, 1, 1, 1],
                         [0, 0, 0, 0, 0]],
                   'm': [[0, 0, 0, 0, 0, 0],
                         [0, 1, 1, 0, 1, 0],
                         [0, 1, 0, 1, 0, 1],
                         [0, 1, 0, 1, 0, 1],
                         [0, 1, 0, 1, 0, 1],
                         [0, 0, 0, 0, 0, 0]],
                   'n': [[0, 0, 0, 0, 0],
                         [0, 1, 1, 1, 0],
                         [0, 1, 0, 0, 1],
                         [0, 1, 0, 0, 1],
                         [0, 1, 0, 0, 1],
                         [0, 0, 0, 0, 0]],
                   'z': [[0, 0, 0, 0, 0],
                         [0, 1, 1, 1, 1],
                         [0, 0, 0, 1, 0],
                         [0, 0, 1, 0, 0],
                         [0, 1, 1, 1, 1],
                         [0, 0, 0, 0, 0]]
                   }
    if 'sc' not in list(charset.keys()):
        charset['sc'] = [[1,1,1,1,1,1],[1,0,0,0,0,1],[1,0,0,0,0,1],[1,0,0,0,0,1],[1,0,0,0,0,1],[1,1,1,1,1,1]]
    
    subst_dict = {0: " ", 1: char}
    
    assigned_digits = digit_assign(string=str(string), digits=charset)
    matrix_to_be_displayed = display_list_add(list_in=assigned_digits)
    display_list(subst_dict=subst_dict, list_in=matrix_to_be_displayed)
    

def digit_assign(string:str, digits:dict):
    subst_list = []
    for digit in string:
        if digit in list(digits.keys()):
            subst_list.append(digits[digit])
        else:
            subst_list.append(digits['sc'])
    return subst_list
    
    
def display_list_add (list_in=[[[0,0,1,1,0,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,0,1,1,0,0]],[[0,0,0,1,0,0],[0,0,1,1,0,0],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,0,1,1,1,0]]]):
    converted_list = []
    act_of_row = 0
    tot_of_rows = len(list_in[0])
    while act_of_row < tot_of_rows:
        act_row = []
        for digit in list_in:
            act_row = act_row + digit[act_of_row]
        act_of_row += 1
        converted_list.append(act_row)                           
    return converted_list


def display_list(subst_dict={0: " ", 1:"O"}, list_in=[[0,0,1,1,0,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[0,0,1,1,0,0]]):
    for line in list_in:
        row = ""
        for digit in line:
            row += str(subst_dict[digit])
        print(row)


if __name__ == "__main__":    
    import list_operations as lo
    # display_8x8(string="sziller:prezi", char=chr(9608), charset=None)
    display_8x8(string="sziller:prezi", char="@", charset=None)


    
